{"version":3,"sources":["components/Pokemon/Pokemon.js","components/PokeList/ListPokemons.js","App.js","reportWebVitals.js","index.js"],"names":["Pokemon","props","className","pokemon","types","type","name","src","process","map","ListPokemons","useState","pokemons","setPokemons","page","setPage","updatePaginate","url","axios","get","then","response","data","results","poke","response2","console","log","useEffect","id","previous","onClick","next","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAmBeA,EAfC,SAACC,GACf,OAAO,sBAAKC,UAAS,eAAUD,EAAME,QAAQC,MAAM,GAAGC,KAAKC,MAApD,UAEH,qBAAKC,IAAG,UAAKC,WAAL,0BAA6CP,EAAME,QAAQG,KAA3D,UACR,4BAAIL,EAAME,QAAQG,OAClB,6BACGL,EAAME,QAAQC,MAAMK,KAAI,SAAAJ,GACrB,OAAO,6BAAKA,EAAKA,KAAKC,gB,gBCyDnBI,EA7DM,WAAO,IAAD,EAEMC,mBAAS,IAFf,mBAEnBC,EAFmB,KAETC,EAFS,OAGDF,mBAAS,IAHR,mBAGlBG,EAHkB,KAGZC,EAHY,KAKrBC,EAAiB,SAACC,GACtBJ,EAAY,IACZK,IAAMC,IAAIF,GAAKG,MAAK,SAAAC,GAClBN,EAAQM,EAASC,MACjBD,EAASC,KAAKC,QAAQd,KAAI,SAAAe,GACxBN,IAAMC,IAAN,UAAaK,EAAKP,MAAOG,MAAK,SAAAK,GAC5BC,QAAQC,IAAIF,EAAUH,MACpBT,GAAY,SAAAD,GAAQ,4BAAQA,GAAR,CAAkBa,EAAUH,oBAoBxD,OAbDM,qBAAU,WACPV,IAAMC,IAAI,8CAA8CC,MAAK,SAAAC,GAC3DN,EAAQM,EAASC,MACjBD,EAASC,KAAKC,QAAQd,KAAI,SAAAe,GACxBN,IAAMC,IAAN,UAAaK,EAAKP,MAAOG,MAAK,SAAAK,GAC5BC,QAAQC,IAAIF,EAAUH,MACpBT,GAAY,SAAAD,GAAQ,4BAAQA,GAAR,CAAkBa,EAAUH,qBAKvD,IAGD,qCACA,yBAASpB,UAAU,WAAnB,SAEGU,EAASH,KAAI,SAACN,EAAS0B,GACpB,OAAO,cAAC,EAAD,CAAS1B,QAASA,SAU/B,qBAAKD,UAAU,YAAf,SACK,+BACGY,EAAKgB,UAAa,oBAAIC,QAAS,kBAAMf,EAAeF,EAAKgB,WAAvC,8BAClBhB,EAAKkB,MAAS,oBAAID,QAAS,kBAAMf,EAAeF,EAAKkB,OAAvC,sC,MC1CXC,MATf,WACE,OACE,qBAAK/B,UAAU,MAAf,SACE,cAAC,EAAD,OCGSgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9eb5e931.chunk.js","sourcesContent":["import React from 'react';\nimport './Index.scss';\n\n\nconst Pokemon = (props) => {\n  return <div className={`poke ${props.pokemon.types[0].type.name}`}>\n      \n      <img src={`${process.env.PUBLIC_URL}/pokemons/name/${props.pokemon.name}.png`} />\n      <p>{props.pokemon.name}</p>\n      <ul>\n        {props.pokemon.types.map(type => {\n            return <li>{type.type.name}</li>\n        })}\n      </ul>\n      \n  </div>\n};\n\n\nexport default Pokemon;","import React from 'react';\nimport {useState, useEffect} from 'react';\nimport './Index.scss';\nimport Pokemon from '../Pokemon/Pokemon';\nimport axios from 'axios';\n \n\nconst ListPokemons = () => {\n\n const [pokemons, setPokemons] = useState([]);\n  const [page, setPage] = useState([]);\n\nconst updatePaginate = (url) =>{\n  setPokemons([]);\n  axios.get(url).then(response => {\n    setPage(response.data)\n    response.data.results.map(poke => {\n      axios.get(`${poke.url}`).then(response2 =>{\n        console.log(response2.data)\n          setPokemons(pokemons => [...pokemons, response2.data])\n        })\n      }) \n    })\n  \n}\n\n useEffect(() => {\n    axios.get('https://pokeapi.co/api/v2/pokemon?limit=25').then(response => {\n      setPage(response.data)\n      response.data.results.map(poke => {\n        axios.get(`${poke.url}`).then(response2 =>{\n          console.log(response2.data)\n            setPokemons(pokemons => [...pokemons, response2.data])\n          })\n        }) \n      })\n      \n  }, [])\n\n  return (\n    <>\n    <section className=\"pokeList\">\n      {/* {JSON.stringify(pokemons)} */}\n      {pokemons.map((pokemon, id) => {\n          return <Pokemon pokemon={pokemon} />\n        })}\n      {/* {JSON.stringify(pokemons)}\n      {pokemons.map((pokemon, id) => {\n          return <Pokemon name={pokemon.name} id={id+1} />\n        })}\n         */}\n\n        \n    </section>\n    <div className=\"paginacao\">\n         <ul>\n           {page.previous && (<li onClick={() => updatePaginate(page.previous)}>proxima anterior</li>)}\n           {page.next && (<li onClick={() => updatePaginate(page.next)}>proxima pagina </li>)}\n           \n         </ul>\n\n    </div>\n      \n    </>\n  )\n}\n\n\nexport default ListPokemons;","import './App.scss';\nimport ListPokemons from './components/PokeList/ListPokemons';\nimport Detalhes from './components/Detalhes/Detalhe';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ListPokemons />\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}